<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zpop.web.dao.MeetingDao">

	<insert id="insert" parameterType="Meeting" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO meeting
			(regMemberId, categoryId, regionId, ageRangeId, title, content, detailRegion, maxMember,
			startedAt, contact, contactTypeId , genderCategory)
		VALUES (#{regMemberId}, #{categoryId}, #{regionId}, #{ageRangeId},
			#{title}, #{content}, #{detailRegion}, #{maxMember}, #{startedAt}, #{contact}, #{contactTypeId}, #{genderCategory})
    </insert>
    
    <update id="updateContent" parameterType="Meeting">
        UPDATE meeting
        SET content=#{content}
        WHERE id = #{id}
	</update>

    <select id="get" resultType="com.zpop.web.entity.meeting.Meeting">
        SELECT *
        FROM meeting
        WHERE id=#{id}
    </select>

	<select id="getByIds" resultType="Meeting">
		SELECT *
		FROM meeting
		<where>
			id IN
			<foreach collection="ids" item="id" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</where>
	</select>

    <select id="getThumbnailViewList" parameterType="com.zpop.web.dto.MeetingThumbnailPagination"
        resultType="com.zpop.web.entity.meeting.MeetingThumbnailView">
        SELECT * FROM meetingThumbnail
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<choose>
				<when test="startId == 0"> id >= #{startId} </when>
					<otherwise>
						<![CDATA[ id < #{startId} ]]>
					</otherwise>
			</choose>
			<choose>
				<when test="isClosed == false">
					AND closedAt IS NULL
					<![CDATA[ AND startedAt >= NOW() ]]>
				</when>
				<when test="isClosed == true">
					AND closedAt IS NOT NULL
				</when>
			</choose>
			<if test="categoryId != null">
				AND categoryId = #{categoryId}
			</if>
			<if test="regionIds != null">
				AND regionId IN
				<foreach collection="regionIds" item="regionId" separator="," open="(" close=")">
					#{regionId}
				</foreach>
			</if>
			<if test="keyword !=null">
				AND title LIKE '%${keyword}%'
			</if>
        </trim>
        LIMIT 0, 9; 
	</select>

    <update id="updateDeletedAt" parameterType="com.zpop.web.entity.meeting.Meeting"> 
        UPDATE meeting
        SET
        deletedAt=NOW()
        WHERE id = #{id}
    </update>

	<update id="removeDeletedAt" parameterType="Meeting">
		UPDATE meeting
        SET
        deletedAt=null
        WHERE id = #{id}
	</update>

    <update id="updateClosedAt" parameterType="com.zpop.web.entity.meeting.Meeting">
        UPDATE meeting
        SET
        closedAt=NOW()
        WHERE id = #{id}
    </update>
	
	<update id="increaseViewCount">
				UPDATE meeting
				SET viewCount = viewCount + 1
				WHERE id = #{id}
	</update>

	<update id="increaseCommentCount">
		UPDATE meeting
		SET commentCount = commentCount + 1
		WHERE id = #{id}
	</update>

	<update id="decreaseCommentCount">
		UPDATE meeting
		SET commentCount = commentCount - 1
		WHERE id = #{id}
	</update>

	<update id="update" parameterType="Meeting">
		UPDATE meeting
        SET 
        	categoryId=#{categoryId}, 
        	regionId=#{regionId}, 
        	ageRangeId=#{ageRangeId}, 
        	contactTypeId=#{contactTypeId}, 
        	genderCategory=#{genderCategory},
        	title=#{title}, 
        	content=#{content}, 
        	detailRegion=#{detailRegion}, 
        	maxMember=#{maxMember}, 
        	startedAt=#{startedAt}, 
        	contact=#{contact}
        WHERE id = #{id}
	</update>

	<select id="getMeetingList"
		resultType="com.zpop.web.entity.meeting.MeetingThumbnailView">
		SELECT *
		FROM meetingThumb AS mt
		JOIN participation p ON
		mt.id = p.meetingId
		JOIN member m ON p.participantId = m.id
		WHERE m.id
		=#{id}
	</select>

	<select id="getAdminViewList" resultType="AdminMeetingDto">
		SELECT
		meeting.id,
		meeting.title,
		member.nickname as hostNickname,
		meeting.maxMember,
		meeting.createdAt,
		IF(meeting.closedAt IS NULL, 0, 1) AS isClosed,
		IF(meeting.deletedAt IS NULL, 0, 1) AS isDeleted,
		IFNULL(pNum.num, 0) as participantsNum
		FROM meeting
		JOIN member
		ON meeting.regMemberId = member.id
		LEFT OUTER JOIN(
			SELECT
			meetingId,
			COUNT(IF(bannedAt IS NULL AND canceledAt IS NULL,1, NULL))
			as num
			FROM participation
			GROUP BY meetingId
			) AS pNum
		ON
		pNum.meetingId=meeting.id
		<where>
			<if test="keyword!=null and !keyword.equals('')">
				<choose>
					<when test="option.equals('title')">
						meeting.title LIKE '%${keyword}%'
					</when>
					<when test="option.equals('nickname')">
						member.nickname LIKE '%${keyword}%'
					</when>
					<when test="option.equals('id')">
						meeting.id = #{keyword}
					</when>
				</choose>
			</if>
			<if test="period!=null and minDate!=null">
				AND
				<![CDATA[
				DATEDIFF(meeting.createdAt, #{minDate}) <=  0
				AND DATEDIFF(meeting.createdAt, #{minDate}) >=  - #{period}
				]]>
			</if>
		</where>
		<choose>
			<when test="order.equals('desc')">
				ORDER BY meeting.id DESC
			</when>
			<otherwise>
				ORDER BY meeting.id ASC
			</otherwise>
		</choose>
		LIMIT
		#{offset},#{size}
	</select>
	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(id)
		FROM meeting
		<where>
			<if test="keyword!=null and !keyword.equals('')">
				<choose>
					<when test="option.equals('title')">
						meeting.title LIKE '%${keyword}%'
					</when>
					<when test="option.equals('nickname')">
						member.nickname LIKE '%${keyword}%'
					</when>
					<when test="option.equals('id')">
						meeting.id = #{keyword}
					</when>
				</choose>
			</if>
			<if test="period!=null and minDate!=null">
				AND
				<![CDATA[
				DATEDIFF(meeting.createdAt, #{minDate}) <=  0
				AND DATEDIFF(meeting.createdAt, #{minDate}) >=  - #{period}
				]]>
			</if>
		</where>
	</select>

	<select id="getAdminDetailView"
		resultType="AdminMeetingDetailsDto">
		SELECT
			meeting.*,
			IF(meeting.deletedAt IS NULL, 0, 1) AS isDeleted,
			IF(meeting.closedAt IS NULL, 0, 1) AS isClosed,
			m1.nickname AS regMemberNickname,
			m1.profileImagePath AS regMemberProfile,
			c.name AS categoryName,
			r.name AS regionName,
			ar.type AS ageRangeType,
			ct.name AS contactTypeName
		FROM meeting
		JOIN member AS m1
		ON meeting.regMemberId = m1.id
		JOIN category AS c
		ON meeting.categoryId = c.id
		JOIN region AS r
		ON meeting.regionId = r.id
		JOIN ageRange AS ar
		ON meeting.ageRangeId = ar.id
		JOIN contactType AS ct
		ON meeting.contactTypeId = ct.id
		WHERE meeting.id=#{meetingId}
	</select>

	<select id="getUpdateView" resultType="UpdateMeetingViewDto">
		SELECT 
			meeting.title,
			meeting.startedAt,
			meeting.detailRegion,
			meeting.content,
			meeting.categoryId,
			category.name AS categoryName,
			meeting.regionId,
			region.name AS regionName,
			meeting.genderCategory,
			meeting.ageRangeId,
			meeting.contact,
			ageRange.type AS ageRangeType,
			meeting.contactTypeId,
			contactType.name AS contactTypeName,
			meeting.maxMember,
			meeting.regMemberId
		FROM meeting 
		JOIN category
		ON category.id = meeting.categoryId
		JOIN region
		ON region.id = meeting.regionId
		JOIN ageRange
		ON ageRange.id = meeting.ageRangeId
		JOIN contactType
		ON contactType.id = meeting.contactTypeId
		WHERE meeting.id = #{meetingId}
	</select>

	<select id="getMeetingHost" resultType="int">
		SELECT regMemberId from meeting
		where id = #{id}
	</select>
	<select id="getCountOfComment" resultType="int">
		SELECT commentCount FROM meeting
		WHERE id = #{id}
	</select>

	<update id="removeAllDeletedAt" parameterType="java.util.List">
		UPDATE meeting
		<if test="ids != null and !ids.isEmpty()">
			SET deletedAt=null
			<where>
				<foreach item="id" index="index" collection="ids"
				open="id IN (" separator="," close=")">
				#{id}
				</foreach>
			</where>
		</if>
	</update>
	<update id="updateAllDeletedAt" parameterType="java.util.List">
		UPDATE meeting
		<if test="ids != null and !ids.isEmpty()">
			SET deletedAt=CURRENT_TIMESTAMP
			<where>
				id IN 
				<foreach item="id" index="index" collection="ids"
				open="(" separator="," close=")">
				#{id}
				</foreach>
			</where>
		</if>
	</update>
</mapper>